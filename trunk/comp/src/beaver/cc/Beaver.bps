%rules
	Spec
		=  "%rules" Rule+  ("%precedences"  Precedence+)?  ("%macros"  Macro+)?  "%tokens" Token+
		;
		
	Rule
		=  ID  "="  (AltDef  "|")+  ";"
		;
		
	AltDef
		=  ruleName:("{"  ID  "}")?  RhsItem*
		;
		
	RhsItem
		=  { Keyword }  TEXT
		|  { Symbol  }  ref:ID  ":"  RhsSymbol  
		|  { Symbol  }               RhsSymbol  
		|  { Inline  }  ref:ID  ":"  "("  prefix:TEXT?  RhsSymbol  suffix:TEXT?  ")"  QUANT
		|  { Inline  }               "("  prefix:TEXT?  RhsSymbol  suffix:TEXT?  ")"  QUANT
		;
		
	RhsSymbol
		=  ID  QUANT?
		; 
		
	Precedence
		=  (PrecSymbol  ",")+  ":"  ASSOC  ";"
		;
		
	PrecSymbol
		=  { TermText } TEXT
		|  { RuleName } ID
		;
		
	Macro
		=  ID  "="  altRegExprList:(CatRegExpr+  "|")+  ";"
		;
		
	CatRegExpr
		=  CharExpr CharExprQuantifier?
		;
		
	CharExpr
		=  { Text   }  TEXT
		|  { Range  }  RangeExpr
		|  { Nested }  "("  (CatRegExpr+  "|")+  ")"
		;
		
	RangeExpr
		=  { Simple }  RANGE
		|  { Macro  }  ID
		|  { Diff   }  min:RangeExpr  "\\"  sub:RangeExpr
		;
		
	CharExprQuantifier
		=  { Oper }  QUANT
		|  { Mult }  "{"  min:NUM  "}"
		|  { Mult }  "{"  min:NUM  ","  max:NUM?  "}"
		;
		
	Token
		=  ID  "="  (CatRegExpr+  "|")+  context:("/" CatRegExpr)?  event:("->" ID)?  ";"
		;
		
%macros

	any 	= [^]
			;
	eol 	= [\r\n]
			;
	dot 	= any \ eol
			;
	esc 	= dot \ [\\]
			;
	digit	= [0-9]
			;
	letter	= [A-Za-z]
			;
			
%tokens

	WS     = [ \t]
		   ;
	NL     = "\r" | "\n" | "\r\n"  -> newLine
		   ;
	QUANT  = "?" | "*" | "+"
		   ;
	ASSOC  = "left" | "right" | "none"
		   ;
	NUM    = digit+
		   ;
	ID     = letter ( letter | digit | [_] )*
		   ;
	TEXT   = "\"" ( esc \ ["] | "\\" dot )* "\""
		   ;
	RANGE  = "[" "^"? ( esc \ [\]] | "\\" dot )* "]"
		   ; 
