package beaver.cc.spec;

public interface NodeVisitor {
	void enter(RuleList _);
	void visit(RuleList _);
	void leave(RuleList _);
	void enter(TokenList _);
	void visit(TokenList _);
	void leave(TokenList _);
	void enter(PrecedenceList _);
	void visit(PrecedenceList _);
	void leave(PrecedenceList _);
	void enter(MacroList _);
	void visit(MacroList _);
	void leave(MacroList _);
	void enter(AltDefList _);
	void visit(AltDefList _);
	void leave(AltDefList _);
	void enter(RhsItemList _);
	void visit(RhsItemList _);
	void leave(RhsItemList _);
	void enter(PrecSymbolList _);
	void visit(PrecSymbolList _);
	void leave(PrecSymbolList _);
	void enter(AltRegExprList _);
	void visit(AltRegExprList _);
	void leave(AltRegExprList _);
	void enter(CatRegExprList _);
	void visit(CatRegExprList _);
	void leave(CatRegExprList _);
	void enter(Spec _);
	void visit(Spec _);
	void leave(Spec _);
	void enter(Rule _);
	void visit(Rule _);
	void leave(Rule _);
	void enter(AltDef _);
	void visit(AltDef _);
	void leave(AltDef _);
	void enter(KeywordRhsItem _);
	void visit(KeywordRhsItem _);
	void leave(KeywordRhsItem _);
	void enter(SymbolRhsItem _);
	void visit(SymbolRhsItem _);
	void leave(SymbolRhsItem _);
	void enter(InlineRhsItem _);
	void visit(InlineRhsItem _);
	void leave(InlineRhsItem _);
	void enter(RhsSymbol _);
	void visit(RhsSymbol _);
	void leave(RhsSymbol _);
	void enter(Precedence _);
	void visit(Precedence _);
	void leave(Precedence _);
	void enter(TermTextPrecSymbol _);
	void visit(TermTextPrecSymbol _);
	void leave(TermTextPrecSymbol _);
	void enter(RuleNamePrecSymbol _);
	void visit(RuleNamePrecSymbol _);
	void leave(RuleNamePrecSymbol _);
	void enter(Macro _);
	void visit(Macro _);
	void leave(Macro _);
	void enter(CatRegExpr _);
	void visit(CatRegExpr _);
	void leave(CatRegExpr _);
	void enter(TextCharExpr _);
	void visit(TextCharExpr _);
	void leave(TextCharExpr _);
	void enter(RangeCharExpr _);
	void visit(RangeCharExpr _);
	void leave(RangeCharExpr _);
	void enter(NestedCharExpr _);
	void visit(NestedCharExpr _);
	void leave(NestedCharExpr _);
	void enter(SimpleRangeExpr _);
	void visit(SimpleRangeExpr _);
	void leave(SimpleRangeExpr _);
	void enter(MacroRangeExpr _);
	void visit(MacroRangeExpr _);
	void leave(MacroRangeExpr _);
	void enter(DiffRangeExpr _);
	void visit(DiffRangeExpr _);
	void leave(DiffRangeExpr _);
	void enter(OperCharExprQuantifier _);
	void visit(OperCharExprQuantifier _);
	void leave(OperCharExprQuantifier _);
	void enter(MultCharExprQuantifier _);
	void visit(MultCharExprQuantifier _);
	void leave(MultCharExprQuantifier _);
	void enter(Token _);
	void visit(Token _);
	void leave(Token _);
	void visit(Term _);
}
